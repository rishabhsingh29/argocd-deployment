pipeline {
  agent any

  environment {
    AWS_REGION = "ap-south-1"
    ECR_REPO = "976283917955.dkr.ecr.ap-south-1.amazonaws.com/test-nginx"
    ARGOCD_SERVER = "http://a5fa23d63610b466eb82c39ab7a2a87e-1894348306.ap-south-1.elb.amazonaws.com/applications"
    ARGOCD_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret \
  -o jsonpath="{.data.password}" | base64 -d)
  }

  stages {

    stage('Checkout') {
      steps {
        git credentialsId: 'rishabhsingh29', url: 'git@github.com:rishabhsingh29/argocd-deployment.git', branch: 'main'
      }
    }

    stage('Configure Git User') {
      steps {
        sh '''
          git config user.email "rishabhsingh1529@gmail.com"
          git config user.name "rishabhsingh29"
        '''
      }
    }

    stage('Build Docker Image') {
      steps {
        sh '''
          docker build -t $ECR_REPO:latest .
        '''
      }
    }

    stage('Login to ECR') {
      steps {
        sh '''
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO
        '''
      }
    }

    stage('Push Docker Image') {
      steps {
        sh '''
          docker push $ECR_REPO:latest
        '''
      }
    }

    stage('Update Kubernetes Manifests') {
      steps {
        sh '''
          sed -i "s|image:.*|image: $ECR_REPO:latest|" deployment.yaml
          git add deployment.yaml
          git commit -m "Update image to $ECR_REPO:latest"
          git push origin main
        '''
      }
    }

    stage('Login to ArgoCD') {
      steps {
        withCredentials([string(credentialsId: 'argocd-admin-password', variable: 'ARGOCD_PASSWORD')]) {
          sh '''
            argocd login $ARGOCD_SERVER --username admin --password $ARGOCD_PASSWORD --insecure
          '''
        }
      }
    }

    stage('Sync ArgoCD App') {
      steps {
        sh '''
          argocd app sync test-nginx-app
        '''
      }
    }

  }
}
